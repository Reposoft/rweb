#!/bin/sh

# to install repos dependendice, you most likely need backports in /etc/apt/sources.list
#deb http://www.backports.org/debian sarge-backports main
# and you probably need to pin the newer subversion packages in /etc/apt/preferences
#Package: subversion
#Pin: release a=sarge-backports
#Pin-Priority: 999
#
#Package: libsvn0
#Pin: release a=sarge-backports
#Pin-Priority: 999
#
#Package: libapache2-svn
#Pin: release a=sarge-backports
#Pin-Priority: 999
 
set -e

PHPINI="/etc/php4/apache2/php.ini"

echo "Magic quotes should be disabled in php.ini"
cat $PHPINI | grep "magic_quotes_gpc"
#if grep -q "" $PHPINI
#then
#
#fi

# enable dav+svn apache modules

if [ ! -e /etc/apache2/mods-enabled/dav.load ]
then
 ln -s /etc/apache2/mods-available/dav.load /etc/apache2/mods-enabled/dav.load
fi

if [ ! -e /etc/apache2/mods-enabled/dav_fs.conf ]
then
 ln -s /etc/apache2/mods-available/dav_fs.conf /etc/apache2/mods-enabled/dav_fs.conf
fi

if [ ! -e /etc/apache2/mods-enabled/dav_fs.load ]
then
 ln -s /etc/apache2/mods-available/dav_fs.load /etc/apache2/mods-enabled/dav_fs.load
fi

if [ ! -e /etc/apache2/mods-enabled/dav_svn.conf ]
then
 ln -s /etc/apache2/mods-available/dav_svn.conf /etc/apache2/mods-enabled/dav_svn.conf 
fi

if [ ! -e /etc/apache2/mods-enabled/dav_svn.load ]
then
 ln -s /etc/apache2/mods-available/dav_svn.load /etc/apache2/mods-enabled/dav_svn.load 
fi

# headers needed for cache optimization
if [ ! -e /etc/apache2/mods-enabled/headers.load ]
then
 ln -s /etc/apache2/mods-available/headers.load /etc/apache2/mods-enabled/headers.load 
fi

# auth-pam needed to integrate account management
if [ ! -e /etc/apache2/mods-enabled/auth_pam.load ]
then
 ln -s /etc/apache2/mods-available/auth_pam.load /etc/apache2/mods-enabled/auth_pam.load 
fi

# proxy needed for ssl+virtual hosts
#if [ ! -e /etc/apache2/mods-enabled/proxy.load ]
# rewrite needed for mass virtual hosts
#if [ ! -e /etc/apache2/mods-enabled/rewrite.load ]

if [ ! -f /bin/gzip ]
then
 echo "Repos 1.1 is hardcoded to use /usr/bin/gzip"
 ln -sv /bin/gzip /usr/bin/gzip
fi

if [ ! -f /bin/gzip ]
then
 ln -sv /bin/gunzip /usr/bin/gunzip
fi

echo "Create empty repository in /var/www/repo"
svnadmin create /var/www/repo/
chown -R www-data /var/www/repo/

chown www-data /var/www/backup

echo "Create Subversion client configuration for Repos"
svn --config-dir /var/www/admin/svn-config-dir/ ls file:///var/www/repo/ > /dev/null
chown -R www-data /var/www/admin/svn-config-dir/
chmod -R a-w /var/www/admin/svn-config-dir/

echo "www-data user should have execute rights on command wrapper"
chmod -v a+x /var/www/admin/reposrun.sh

echo "Enable the repository in apache"
ln -sv /var/www/admin/data-repository.conf /etc/apache2/sites-enabled/

echo "The repos login file must be copied to server root"
mv -v /var/www/html/index.html /var/www/html/start.html
cp -v /var/www/html/repos/_host/html/* /var/www/html/

echo "Make www-data memeber of shadow group, to enable mod-auth-pam"
echo "This means it can be readable by anyone who can run CGI scripts, see libapache2-mod-auth-pam README"
usermod -G shadow www-data

echo "Restart apache2"
/etc/init.d/apache2 restart

echo "Only 'admin' can login ro Repos administration" 
chown -v admin /var/www/admin/data-repository.conf
chown -v admin /var/www/admin/repos-access
chown -v admin /var/www/admin/repos.properties
chown -Rv admin /var/www/html/home
if [ ! -d /home/admin/repos ]
then
 sudo -u admin mkdir -v /home/admin/repos
 sudo -u admin ln -sv /var/www/html/home /home/admin/repos/home
 sudo -u admin ln -sv /var/www/admin/repos-access /home/admin/repos/repos-access
fi

echo "TODO if hostname is not 'bubba', edit /var/www/admin/repos.properties"

echo "TODO create demoproject/trunk/ with sample data"
