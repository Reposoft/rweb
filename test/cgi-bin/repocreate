#!/usr/bin/perl -w
use strict;

use Getopt::Long;
my %o = (
  'parent' => '/svn'
);

my $name = '';
sub reponame {
  die("Respository name already set to $name\n") if $name;
  $name = $_[0];
}

GetOptions (\%o,
            # allow revpropchange if this shell expression evaluates to true
            # for example '1' or '$USER = "syncuser"'
            "revpropchange|c=s",
            # empty to generate
            "uuid|u=s",
            # chown repo to this user
            "owner|o=s",
            # chgrp repo to this user
            "group|g=s",
            '<>' => \&reponame
            )
or die("Error in command line arguments\n");

die("Repository name is a required argument") if not $name;

my $repo = "$o{'parent'}/$name";
`svnadmin create $repo`;
${^CHILD_ERROR_NATIVE} and die("Aborted") or print "Created repository $repo\n";

if (exists($o{'uuid'})) {
  `svnadmin setuuid $repo $o{'uuid'}`;
  ${^CHILD_ERROR_NATIVE} and die("Aborted") or print "UUID changed to $o{'uuid'}\n";
}

if (exists($o{'revpropchange'})) {
  my $hook = "$repo/hooks/pre-revprop-change";
  open (FILE, ">> $hook") || die "Failed to open hook $hook for writing\n";
  print FILE $o{'revpropchange'} ? <<HOOK
#!/bin/sh
REPOS="\$1"
REV="\$2"
USER="\$3"
PROPNAME="\$4"
ACTION="\$5"
if [ $o{revpropchange} ]; then exit 0; fi
echo "Revision property change blocked" >&2
exit 1
HOOK
: <<HOOK;
#!/bin/sh
exit 0
HOOK
  close(FILE);
  `chmod ug+x $hook`;
  ${^CHILD_ERROR_NATIVE} and die("Aborted") or print "Revprop change hook enabled, rule: $o{revpropchange}\n";
}

if (exists($o{'owner'})) {
  `chown -R $o{'owner'} $repo`;
  ${^CHILD_ERROR_NATIVE} and die("Aborted") or print "Owner set to $o{'owner'}\n";
}

if (exists($o{'group'})) {
  `chgrp -R $o{'group'} $repo`;
  ${^CHILD_ERROR_NATIVE} and die("Aborted") or print "Group set to $o{'group'}\n";
}
