<project name="repos-js" default="head.js" basedir=".">

	<!-- Repos javascript architecture is based on jQuery, jquery.com -->
	
	<!-- The head.js file is built and committed to source -->
	<!-- It may also be rebuilt with external plugins after deployment -->
	
	<!-- === Javascript build configuration === -->
	<property name="plugins.external.folder" location="../../repos-plugins" />
	<property name="plugins.excludes" value="" description="External plugins to excluded from build" />
	
	<property name="compile.level" value="simple"/>
	
	<!-- Customer-specific plugins may override build settings -->
	<property file="${plugins.external.folder}/build.properties" />
	
	<available file="${plugins.external.folder}" property="plugins.external.include" />
	
	<property name="build.folder" value="build" />

	<property name="intro.folder" value="./reposin" />
	<property name="outro.folder" value="./reposout" />
	<property name="lib.folder" value="./lib" />	
	<property name="api.folder" value="./reposapi" />	
	<property name="plugins.folder" value="../plugins" />
	
	<property name="excludes.default" value="**/*.test.js,**/test/**,**/*.min.js,**/*.externs.js" />
	
	<property name="head.js.file" value="./head.js" />
	
	<!-- === End configuration, start build === -->

	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask"
		classpath="${build.folder}/compiler.jar"/>

	<!-- TODO use Closure Compilers managed dependencies instead of concatenation" -->
	
	<target name="compile.concat" description="Concat scripts for compilation of single file">
		
		<fileset id="pluginset" dir="${plugins.external.folder}"
			includes="**/*.load.js,**/*.plugin.js"
			excludes="${plugins.excludes}" />
		
		<!-- compiler task does not support fileset -->
		<!-- https://groups.google.com/group/closure-compiler-discuss/browse_thread/thread/25b55f9cb5e88248?pli=1 -->
		<concat destfile="${head.js.file}.big" append="no">
			<fileset dir="${lib.folder}" includes="jquery/*.js" excludes="${excludes.default}" />
			<fileset dir="${lib.folder}" includes="**/*.js" excludes="jquery/**,${excludes.default}"/>
			<fileset dir="${api.folder}" includes="**/*.js" excludes="${excludes.default}" />
			<fileset dir="${plugins.folder}" includes="**/*.js" excludes="${excludes.default}" />
			<fileset refid="pluginset"/>
		</concat>
		
		<concat destfile="${head.js.file}.externs.big">
			<fileset dir="${lib.folder}" includes="**/*.externs.js"/>
			<fileset dir="${plugins.folder}" includes="**/*.externs.js"/>
		</concat>
		
		<concat destfile="${head.js.file}.precompiled">
			<fileset dir="${lib.folder}" includes="jquery/*.min.js"/>
			<fileset dir="${lib.folder}" includes="**/*.min.js" excludes="jquery/**"/>
			<!-- not allowed for plugins because these are placed first in bundle -->
		</concat>

	</target>
		
	<target name="compile.collect">
		<concat destfile="${head.js.file}">
			<fileset dir="${intro.folder}" includes="**/*.js" excludes="${excludes.default}" />
			<filelist dir="${basedir}">
				<file name="${head.js.file}.precompiled"/>
				<file name="${head.js.file}.compiled"/>
			</filelist>
			<fileset dir="${outro.folder}" includes="**/*.js" excludes="${excludes.default}" />
		</concat>
	</target>
	
	<target name="compile.none" unless="compile.level.set">
		<copy tofile="${head.js.file}.compiled" file="${head.js.file}.big"/>
	</target>
	
	<target name="compile.closure" if="compile.level.set">
		<jscomp output="${head.js.file}.compiled"
				compilationLevel="${compile.level}"
				warning="verbose"
				debug="yes"
				printinputdelimiter="yes"
				managedependencies="yes">

			<externs dir="${basedir}">
				<file name="${head.js.file}.externs.big"/>
			</externs>

			<sources dir="${basedir}">
				<file name="${head.js.file}.big" />
			</sources>
			
		</jscomp>		
	</target>
	
	<target name="compile" depends="compile.concat, compile.none, compile.closure, compile.collect"/>
	
	<target name="clean">
		<delete file="${head.js.file}.big" />
		<delete file="${head.js.file}.compiled" />
		<delete file="${head.js.file}.externs" />
		<delete file="${head.js.file}.info.txt" />		
		<delete file="${head.js.file}" />
	</target>

	<target name="head.js" depends="compile">
	</target>
	
</project>
