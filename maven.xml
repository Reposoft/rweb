<!-- Customized maven behavior -->
<project
	xmlns:j="jelly:core"
	xmlns:ant="jelly:ant">

  <!-- before generating project documentation, include repos manual -->
  <postGoal name="xdoc:generate-from-pom">
  	<attainGoal name="docbook:transform"/>
  	<attainGoal name="dependency-info"/>
  </postGoal>
  
  <!-- collect dependency installation files for reference -->
  <goal name="dependency-info">
    <ant:echo>Transforming dependency buildfiles</ant:echo>
    <ant:copy todir="${maven.docs.dest}/dependencies">
      <ant:mapper type="package" from="*.xml" to="*.xml"/>
      <ant:fileset dir="www">
        <ant:include name="**/build.xml" />
      </ant:fileset>
    </ant:copy>
    
    <!-- trying to find a way to automatically build an index -->
    <ant:path id="dependency.collection">
        <ant:fileset dir="${maven.docs.dest}/dependencies">
            <ant:include name="*.build.xml"/>
        </ant:fileset>
    </ant:path>
    <echo>Running ${dependency.collection}</echo>
    <j:forEach items="${dependency.collection}" var="dependency.name">
        <echo>${filename}</echo>
    </j:forEach>
    
    ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}
    <ant:style basedir="${maven.docs.dest}/dependencies"
      includes="*.xml" processor="trax" extension=".xml"
      destdir="${maven.gen.docs}/dependencies"
      style="${maven.docs.src}/dependencies/build.xsl">
	</ant:style>
  </goal>
  
  <!-- collect extra documentation site contents -->
  <postGoal name="site:generate">
  	<attainGoal name="docs-images"/>
  </postGoal>

  <!-- copy www contents into development docs -->
  <goal name="docs-images">
  	<ant:echo>Copying images to ${maven.docs.dest}</ant:echo>
    <ant:copy todir="${maven.docs.dest}">
      <ant:fileset dir="www">
        <ant:include name="logo/*.png" />
      </ant:fileset>
    </ant:copy>
  </goal>
  
  <!-- JSPs are edited in www directory but should be included in WAR only -->
  <goal name="war-jsp">
  	<ant:echo>Copying JSPs to ${maven.war.webapp.dir}/WEB-INF/jsp</ant:echo> 
    <ant:copy todir="${maven.war.webapp.dir}/WEB-INF/jsp">
      <ant:fileset dir="www">
        <ant:include name="**/*.jsp" />
      </ant:fileset>
    </ant:copy>
  </goal>

  <!-- before making webapp - 
  		copy jsp-s from editor friendly location to WAR's WEB-INF
  		so that they are deployed to tomcat and hidden from direct access -->
  <postGoal name="war:webapp">
  	<ant:echo>Copying JSPs to WAR</ant:echo> 
    <ant:copy todir="${maven.war.webapp.dir}/WEB-INF/jsp">
      <ant:fileset dir="www">
        <ant:include name="**/*.jsp" />
      </ant:fileset>
    </ant:copy>
    <!-- if not deploying contents to apache2 separately, 
  		all static contents could be included in war  -->
  	<ant:echo>war.include.www is set to '${war.include.www}'</ant:echo>
  	<j:if test="${war.include.www}">
	  	<ant:echo>Including all static web contents in war-file.</ant:echo>
	    <ant:copy todir="${maven.war.webapp.dir}">
	      <ant:fileset dir="www">
	        <ant:include name="**/*" />
	        <ant:exclude name="**/*.jsp" />
	      </ant:fileset>
	    </ant:copy>
	</j:if>
	<!-- custom cleanup -->
	<ant:delete file="${basedir}/velocity.log"/>
  </postGoal>
  
  <!-- clean up jcoverage data that could corrupt subsequent reports -->
  <postGoal name="jcoverage">
  	<ant:delete file="${basedir}/jcoverage.ser"/>
  </postGoal>
  
</project>