<!-- Customized maven behavior -->
<project
	xmlns:j="jelly:core">

  <!-- before generating project documentation, include repos manual -->
  <postGoal name="xdoc:generate-from-pom">
  	<attainGoal name="docbook:transform"/>
  	<attainGoal name="dependency-info"/>
  </postGoal>
  
  <!-- collect dependency installation files for reference -->
  <goal name="dependency-info">
    <property name="dp.src" value="${maven.docs.src}/dependencies"/>
    <property name="dp.temp" value="${maven.docs.dest}/dependencies"/>
    <echo>Transforming dependency buildfiles</echo>
    <copy todir="${maven.docs.dest}/dependencies">
      <mapper type="package" from="*.xml" to="*.xml"/>
      <fileset dir="www">
        <include name="**/build.xml" />
      </fileset>
    </copy>
    <!-- automatically build an index --> 
    <concat destfile="${dp.temp}/index.concat">
        <fileset dir="${dp.temp}" includes="*build.xml"/>
    </concat>
    <replace file="${dp.temp}/index.concat" token="?xml" value="!-- "/>
    <replace file="${dp.temp}/index.concat" token="?>" value=" -->"/>
    <concat destfile="${dp.temp}/index.xml" append="false"><fileset file="${dp.src}/index.header"/></concat>
    <concat destfile="${dp.temp}/index.xml" append="true"><fileset file="${dp.temp}/index.concat"/></concat>
    <concat destfile="${dp.temp}/index.xml" append="true"><fileset file="${dp.src}/index.footer"/></concat>
    <delete file="${dp.temp}/index.concat"/>
    <!-- do transformations to xdoc -->
    ${systemScope.setProperty('javax.xml.transform.TransformerFactory','org.apache.xalan.processor.TransformerFactoryImpl')}
    <style basedir="${dp.temp}"
      includes="*.xml" processor="trax" extension=".xml"
      destdir="${maven.gen.docs}/dependencies"
      style="${dp.src}/build.xsl">
	</style>
	<!-- clean -->
    <delete>
        <fileset dir="${dp.temp}" includes="*.xml"/>
    </delete>
  </goal>
  
  <!-- collect extra documentation site contents -->
  <postGoal name="site:generate">
  	<attainGoal name="docs-images"/>
  </postGoal>

  <!-- copy www contents into development docs -->
  <goal name="docs-images">
  	<echo>Copying images to ${maven.docs.dest}</echo>
    <copy todir="${maven.docs.dest}">
      <fileset dir="www">
        <include name="logo/*.png" />
      </fileset>
    </copy>
  </goal>
  
  <!-- JSPs are edited in www directory but should be included in WAR only -->
  <goal name="war-jsp">
  	<echo>Copying JSPs to ${maven.war.webapp.dir}/WEB-INF/jsp</echo> 
    <copy todir="${maven.war.webapp.dir}/WEB-INF/jsp">
      <fileset dir="www">
        <include name="**/*.jsp" />
      </fileset>
    </copy>
  </goal>

  <!-- before making webapp - 
        - copy configuration file from shared conf folder.
  		- copy jsp-s from editor friendly location to WAR's WEB-INF
  		so that they are deployed to tomcat and hidden from direct access -->
  <postGoal name="war:webapp">
    <echo>Copying configuration files to ${maven.war.webapp.dir}/WEB-INF</echo>
    <copy todir="${maven.war.webapp.dir}/WEB-INF">
      <fileset dir="www/conf">
        <include name="**/*.properties" />
      </fileset>
    </copy>
  	<echo>Copying JSPs to WAR</echo> 
    <copy todir="${maven.war.webapp.dir}/WEB-INF/jsp">
      <fileset dir="www">
        <include name="**/*.jsp" />
      </fileset>
    </copy>
    <!-- if not deploying contents to apache2 separately, 
  		all static contents could be included in war  -->
  	<echo>war.include.www is set to '${war.include.www}'</echo>
  	<j:if test="${war.include.www}">
	  	<echo>Including all static web contents in war-file.</echo>
	    <copy todir="${maven.war.webapp.dir}">
	      <fileset dir="www">
	        <include name="**/*" />
	        <exclude name="**/*.jsp" />
	      </fileset>
	    </copy>
	</j:if>
	<!-- custom cleanup -->
	<delete file="${basedir}/velocity.log"/>
  </postGoal>
  
  <!-- clean up jcoverage data that could corrupt subsequent reports -->
  <postGoal name="jcoverage">
  	<delete file="${basedir}/jcoverage.ser"/>
  </postGoal>
  
</project>