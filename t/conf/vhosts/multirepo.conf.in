
# To test with pds-suse-svn1 settings change to the following after ./testconfig.sh
#Listen 0.0.0.0:80
#<VirtualHost _default_:80>
#   ServerName pds-suse-svn1.pdsvision.net:80
#	SetEnv REPOS_REPO http://pds-suse-svn1.pdsvision.net/svn # must be the same from server 
# Then start apache as root using the command printed out by ./TEST -start
# and edit the hosts file of the client
# Then try the shutdown command from ./TEST -stop

<VirtualHost multirepo>
	# the server name added by Apache::Test sets correct SelfRoot in repos.properties.php

	# Support ssl proxy for subversion
	RequestHeader edit Destination ^https http early
	# Emulate env from SSLEngine on
	SetEnvIf X-Forwarded-Server "^.*$" HTTPS=on 

	# Install repos components
	Alias /repos-web @ServerRoot@/../www
	Alias /repos-admin @ServerRoot@/../repos-admin
	Alias /repos-plugins @ServerRoot@/../repos-plugins
	Alias /repos-test @ServerRoot@/../repos-test
	
	# Evaulating a fulltext search feature
	# This alias requires repos-serach root in workspace, outside the Directory in extra.conf.in
	Alias /repos-search @ServerRoot@/../../repos-search/trunk
	<Directory @ServerRoot@/../../repos-search/>
		DirectoryIndex index.html index.php index.py
    	AddHandler mod_python .py
    	PythonHandler mod_python.publisher
	</Directory>
	
	SetEnv REPOS_TEST_ALLOW_RESET on

	SetEnv REPOS_REPO http://@ServerName@:@multirepo_port@/svn
	# needed because currently access file path is used for test setup to get host structure folder
	SetEnv REPOS_ACCESS_FILE @ServerRoot@/hosts/original/admin/repos-access

	# during xsl development
	Header add Cache-Control "max-age=0, must-revalidate"

	# Repos error pages
	ErrorDocument 400 /repos-web/errors/400/
	ErrorDocument 401 /repos-web/errors/401/
	ErrorDocument 403 /repos-web/errors/403/
	ErrorDocument 404 /repos-web/errors/404/
	ErrorDocument 500 /repos-web/errors/500/

	# Direct proxy for indexing engine, not needed if using repos indexing proxy
	#ProxyPass /solr ajp://127.0.0.1:8009/solr
	#ProxyPreserveHost On

    # Test that servicelayer module is in python path and that the handler concept works
	<Location /servicelayer>
		PythonFixupHandler repos.servicelayer.testhandler
	</Location>

	# Master repositories 
	# Traling slash in location required for SVNParentPath+AuthSVNAccessFile
	RedirectMatch ^(/svn)$ $1/
	<Location /svn/>
		# enable servicelayer
		PythonFixupHandler repos.servicelayer.apache
	
		DAV svn
		SVNAutoversioning on

		SVNIndexXSLT "/repos-web/view/repos-multi.xsl"

		SVNParentPath @ServerRoot@/hosts/multirepo/svn
		SVNListParentPath on

		AuthType Basic
		AuthName "repos test multirepo"
		AuthUserFile @ServerRoot@/hosts/multirepo/admin/repos-users
		Require valid-user

		AuthzSVNAccessFile @ServerRoot@/hosts/multirepo/admin/repos-access
		# no public access
		Satisfy All
		
		# Svn module does not set caching behavior as expected for dynamic contents
		Header add Cache-Control "max-age=0, must-revalidate"
	</Location>
	
	# Image transforms repository
	<Location /repos-thumbs>
		DAV svn
		# Transform service may use PUT to store thumbnails (because there is no simple svn overwrite without wc)
		SVNAutoversioning on

		SVNParentPath @ServerRoot@/hosts/multirepo/repos-thumbs
		SVNListParentPath on

		# Should be same authentication and authorization as main repository
		AuthType Basic
		AuthName "repos test multirepo"
		AuthUserFile @ServerRoot@/hosts/multirepo/admin/repos-users
		Require valid-user

		#AuthzSVNAccessFile @ServerRoot@/hosts/multirepo/admin/repos-access
		#Satisfy Any
		
		# Svn module does not set caching behavior as expected for dynamic contents
		Header add Cache-Control "max-age=0, must-revalidate"
		
		# Create thumbnails on demand
		ErrorDocument 404 /repos-plugins/thumbnails/convert/
	</Location>

</VirtualHost>

